generate_commit_message	gitp.sh:5	function generate_commit_message() {
generate_commit_message	gitp.sh:57	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:171	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:177	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:5	function generate_commit_message() {
$	gitp.sh:17	gpt_message=$(echo "${gpt_message}" | jq -sRr @json)
$	gitp.sh:20	local api_response=$(curl -s -H "Content-Type: application/json" \
$	gitp.sh:25	local error_message=$(echo "${api_response}" | jq -r '.error.message // empty')
$	gitp.sh:32	local commit_message_full=$(echo "${api_response}" | jq -r '.choices[0].message.content' | tr -d '\r')
$	gitp.sh:33	local commit_message_subject=$(printf "%b" "$(echo "${commit_message_full}" | awk -F'\n\n' '{print $1}' | sed -E 's/^"?(Subject: )?
generate_commit_message	gitp.sh:5	function generate_commit_message() {
generate_commit_message	gitp.sh:57	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:171	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:177	commit_message_output=( $(generate_commit_message "${branch_name}" "${git_diff}" "${intent}" "${GPT_MODEL_CHOICE}" "${GPT4_API_KEY}") )
generate_commit_message	gitp.sh:5	function generate_commit_message() {
$	gitp.sh:17	gpt_message=$(echo "${gpt_message}" | jq -sRr @json)
$	gitp.sh:20	local api_response=$(curl -s -H "Content-Type: application/json" \
$	gitp.sh:25	local error_message=$(echo "${api_response}" | jq -r '.error.message // empty')
$	gitp.sh:32	local commit_message_full=$(echo "${api_response}" | jq -r '.choices[0].message.content' | tr -d '\r')
$	gitp.sh:33	local commit_message_subject=$(printf "%b" "$(echo "${commit_message_full}" | awk -F'\n\n' '{print $1}' | sed -E 's/^"?(Subject: )?
